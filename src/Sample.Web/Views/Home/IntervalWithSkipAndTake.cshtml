@{
    ViewBag.Title = "Pushqa Samples: Process Information Viewer";
}

<h2>Pushqa Samples: Interval Sample with Take and Skip</h2>

<div>@Html.ActionLink("Samples Home", "Index")</div>

<p>This sample will listen to an Interval timer which pushes an auto incrementing integer in a series of events occuring every 1 second. The query will only take every even numbered event, skip the first 2 events and only take 5 in total.</p>
<p>Uri: http://myserver/myapp/events/OneSecondTimer/?$filter=(MessageId mod 2) eq 0&$skip=2&$top=5</p>

<div>
    <script type="text/javascript">
        $(function () {
            var everStarted = false;

            // Setup our connection
            // var connection = $.connection('../events/OneSecondTimer', { $filter: "(MessageId mod 2) eq 0", $skip: 2, $top: 5 });
            var connection = $.connection('../events');
            var resource = connection.registerResource('OneSecondTimer', "(MessageId mod 2) eq 0");
            
            // Append each message received
            resource.asObservable().subscribe(
                function (data) {
                    debugger;
                    $('#messages').append('<li>Id=' + data.MessageId + ', Description=' + data.Description + ', Timestamp=' + data.TimeStamp + '</li>');
                },
                function (error) {
                    debugger;
                    $('#messages').append('<li>Error: ' + error + '</li>');
                },
                function () {
                    debugger;
                    connection.stop();
                    $('#messages').append('<li>Complete</li>');
                }
            );

            connection.starting(function () {
                $('#messages').append("'<li>Starting Connection</li>");
            });

            connection.start(function () {
                for (var resourceName in connection.resources) {
                    debugger;
                    connection.resources[resourceName].onConnected();
                }
            });

            $("#connect").click(function () {
                connection.start(function () {
                    for (var resourceName in connection.resources) {
                        debugger;
                        connection.resources[resourceName].onConnected();
                    }
                });
            });

            $("#disconnect").click(function () {
                connection.stop();
               
            });
        });

    </script>
    <input type="button" id="connect" value="Connect" />
    <input type="button" id="disconnect" value="Disconnect" />
    <ul id="messages"></ul>
</div>